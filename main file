{
    "AWSTemplateFormatVersion" : "2010-09-09",
  
    "Description" : "Roles, S3 bucket, CodeDeploy and CodePipeline setup",
  
    "Parameters" : {
      "MainBranchName" : {
        "Type" : "String",
        "Default" : "master",
        "Description" : "Enter main branch name. Default is master."
      },
      "DevBranchName" : {
        "Type" : "String",
        "Default" : "develop",
        "Description" : "Enter development branch name. Default is develop."
      }
    },
  
    "Resources" : {
  
      "WebAppRepo" : {
        "Type" : "AWS::CodeCommit::Repository",
        "Properties" : {
          "RepositoryName" : "WebAppRepo",
          "RepositoryDescription" : "a sample java application"
        }
      },
  
      "CodeBuildTrustRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Sid": "1",
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "codebuild.amazonaws.com"
                  ]
                },
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "Path": "/"
        }
      },
  
      "CodeBuildPolicy": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyName": "CodeBuildPolicy",
          "PolicyDocument": {
            "Statement": [
                {
                    "Effect": "Allow",
                    "Resource": [
                        { "Fn::Join" : ["", [ "arn:aws:logs:", { "Ref": "AWS::Region" } , ":", {"Ref" : "AWS::AccountId"}, ":log-group:/aws/codebuild/WebAppRepo" ]] },
                        { "Fn::Join" : ["", [ "arn:aws:logs:", { "Ref": "AWS::Region" } , ":", {"Ref" : "AWS::AccountId"}, ":log-group:/aws/codebuild/WebAppRepo:*" ]] }
  
                    ],
                    "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                    ]
                },
                {
                    "Effect": "Allow",
                    "Resource": [
                      { "Fn::Join" : ["", [ "arn:aws:s3:::cicd-demo-", { "Ref": "AWS::Region" } , "-", {"Ref" : "AWS::AccountId"} ]] },
                      { "Fn::Join" : ["", [ "arn:aws:s3:::cicd-demo-", { "Ref": "AWS::Region" } , "-", {"Ref" : "AWS::AccountId"}, "/*"  ]]}
                    ],
                    "Action": [
                        "s3:PutObject",
                        "s3:GetObject",
                        "s3:GetObjectVersion"
                    ]
                }
            ]
          },
          "Roles": [{ "Ref": "CodeBuildTrustRole"}]
        }
      },
  
      "CodeBuildProject": {
        "Type": "AWS::CodeBuild::Project",
        "Properties": {
          "Name": "WebAppRepo",
          "Description": "This is demo web app project",
          "ServiceRole": { "Fn::GetAtt": [ "CodeBuildTrustRole", "Arn" ] },
          "Artifacts": {
            "Type": "CODEPIPELINE"
          },
          "Environment": {
            "Type": "linuxContainer",
            "ComputeType": "BUILD_GENERAL1_SMALL",
            "Image": "aws/codebuild/java:openjdk-8",
            "EnvironmentVariables": []
          },
          "Source": {
            "Type": "CODEPIPELINE"
          },
          "TimeoutInMinutes": 30,
          "Tags": []
        }
      },
  
      "CodePipelineTrustRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Sid": "1",
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "codepipeline.amazonaws.com"
                  ]
                },
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "Path": "/"
        }
      },
  
      "CodePipelineRolePolicies": {
        "Type": "AWS::IAM::Policy",
        "Properties": {
          "PolicyName": "CodePipelinePolicy",
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "s3:*"
                ],
                "Resource": ["*"],
                "Effect": "Allow"
              },
              {
                "Action": [
                  "s3:PutBucketPolicy",
                  "s3:PutObject"
                ],
                "Resource": [
                  { "Fn::Join" : ["", [ "arn:aws:s3:::cicd-demo-", { "Ref": "AWS::Region" } , "-", {"Ref" : "AWS::AccountId"} ]] }
                ],
                "Effect": "Allow"
              },
              {
              "Action": [
                  "codecommit:GetBranch",
                  "codecommit:GetCommit",
                  "codecommit:UploadArchive",
                  "codecommit:GetUploadArchiveStatus",
                  "codecommit:CancelUploadArchive"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                  "codepipeline:*",
                  "iam:ListRoles",
                  "iam:PassRole",
                  "codedeploy:CreateDeployment",
                  "codedeploy:GetApplicationRevision",
                  "codedeploy:GetDeployment",
                  "codedeploy:GetDeploymentConfig",
                  "codedeploy:RegisterApplicationRevision",
                  "elasticbeanstalk:DescribeApplications",
                  "elasticbeanstalk:DescribeEnvironments",
                  "lambda:GetFunctionConfiguration",
                  "lambda:ListFunctions"
                ],
                "Resource": "*",
                "Effect": "Allow"
              },
              {
                "Action": [
                    "codebuild:StartBuild",
                    "codebuild:StopBuild",
                    "codebuild:BatchGet*",
                    "codebuild:Get*",
                    "codebuild:List*",
                    "codecommit:GetBranch",
                    "codecommit:GetCommit",
                    "codecommit:GetRepository",
                    "codecommit:ListBranches",
                    "s3:GetBucketLocation",
                    "s3:ListAllMyBuckets"
                ],
                "Effect": "Allow",
                "Resource": "*"
            },
            {
                "Action": [
                    "logs:GetLogEvents"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:logs:*:*:log-group:/aws/codebuild/*:log-stream:*"
            }
            ]
          },
          "Roles": [{ "Ref": "CodePipelineTrustRole"}]
        }
      },
      
  "MasterPipeline": {
        "Type": "AWS::CodePipeline::Pipeline",
        "DependsOn" : "S3Bucket",
        "Properties": {
          "Name": "WebAppRepo-master",
          "RoleArn": {"Fn::GetAtt" : ["CodePipelineTrustRole", "Arn"]},
          "Stages": [
            {
              "Name": "Source",
              "Actions": [
                {
                  "Name": "ApplicationSource",
                  "InputArtifacts": [],
                  "ActionTypeId": {
                    "Version": "1",
                    "Category": "Source",
                    "Owner" : "AWS",
                    "Provider": "CodeCommit"
                  },
                  "OutputArtifacts": [
                    {
                      "Name": "WebAppRepo-SourceArtifact"
                    }
                  ],
                  "Configuration": {
                        "RepositoryName": "WebAppRepo",
                        "BranchName": {"Ref":"MainBranchName"},
                        "PollForSourceChanges": false
                  },
                  "RunOrder": 1
                }
              ]
            },
            {
              "Name": "Build",
              "Actions": [
                {
                  "Name": "ApplicationBuild",
                  "InputArtifacts": [
                    {
                      "Name": "WebAppRepo-SourceArtifact"
                    }
                  ],
                  "ActionTypeId": {
                    "Category": "Build",
                    "Owner": "AWS",
                    "Version": "1",
                    "Provider": "CodeBuild"
                  },
                  "OutputArtifacts": [
                    {
                      "Name": "WebAppRepo-BuiltArtifact"
                    }
                  ],
                  "Configuration": {
                    "ProjectName": "WebAppRepo"
                  },
                  "RunOrder": 1
                }
              ]
            }
          ],
          "ArtifactStore": {
            "Type": "S3",
            "Location": { "Fn::Join" : ["", [ "cicd-demo-", { "Ref": "AWS::Region" } , "-", {"Ref" : "AWS::AccountId"} ]] }
          }
        }
      },    
  
      "AmazonCloudWatchEventRoleDevPipeline": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }]
          },
      "Path": "/",
      "Policies": [{
        "PolicyName": "cwe-pipeline-execution",
        "PolicyDocument": {
          "Version": "2012-10-17",
        "Statement": [{
          "Effect": "Allow",
          "Action": "codepipeline:StartPipelineExecution",
          "Resource": {
            "Fn::Join": [
              "",
              [
                "arn:aws:codepipeline:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":WebAppRepo-develop"
              ]
            ]
          }
        }]
        }
      }]            
      }
    },
  
      "AmazonCloudWatchEventRuleDevPipeline": {
        "Type": "AWS::Events::Rule",
        "Properties": {
            "EventPattern": {
                "source": [
                    "aws.codecommit"
                ],
                "detail-type": [
                    "CodeCommit Repository State Change"
                ],
                "resources": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:codecommit:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":WebAppRepo"
                            ]
                        ]
                    }
                ],
                "detail": {
                    "event": [
                        "referenceCreated",
                        "referenceUpdated"
                    ],
                    "referenceType": [
                        "branch"
                    ],
                    "referenceName": [
                      {"Ref":"DevBranchName"}
                    ]
                }
            },
            "Targets": [
                {
                    "Arn": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:codepipeline:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":WebAppRepo-develop"
                            ]
                        ]
                    },
                    "RoleArn": {
                        "Fn::GetAtt": [
                            "AmazonCloudWatchEventRoleDevPipeline",
                            "Arn"
                        ]
                    },
                    "Id": "codepipeline-AppPipeline"
                }
            ]
        }
      },
  
      "AmazonCloudWatchEventRoleMasterPipeline": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }]
          },
      "Path": "/",
      "Policies": [{
        "PolicyName": "cwe-pipeline-execution",
        "PolicyDocument": {
          "Version": "2012-10-17",
        "Statement": [{
          "Effect": "Allow",
          "Action": "codepipeline:StartPipelineExecution",
          "Resource": {
            "Fn::Join": [
              "",
              [
                "arn:aws:codepipeline:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":WebAppRepo-master"
              ]
            ]
          }
        }]
        }
      }]            
      }
    },
  
      "AmazonCloudWatchEventRuleMasterPipeline": {
        "Type": "AWS::Events::Rule",
        "Properties": {
            "EventPattern": {
                "source": [
                    "aws.codecommit"
                ],
                "detail-type": [
                    "CodeCommit Repository State Change"
                ],
                "resources": [
                    {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:codecommit:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":WebAppRepo"
                            ]
                        ]
                    }
                ],
                "detail": {
                    "event": [
                        "referenceCreated",
                        "referenceUpdated"
                    ],
                    "referenceType": [
                        "branch"
                    ],
                    "referenceName": [
                      {"Ref":"MainBranchName"}
                    ]
                }
            },
            "Targets": [
                {
                    "Arn": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:codepipeline:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":WebAppRepo-master"
                            ]
                        ]
                    },
                    "RoleArn": {
                        "Fn::GetAtt": [
                            "AmazonCloudWatchEventRoleMasterPipeline",
                            "Arn"
                        ]
                    },
                    "Id": "codepipeline-AppPipeline"
                }
            ]
        }
      },
  
      "S3Bucket": {
        "Type": "AWS::S3::Bucket",
        "Properties": {
          "BucketName" : { "Fn::Join" : ["", [ "cicd-demo-", { "Ref": "AWS::Region" } , "-", {"Ref" : "AWS::AccountId"} ]] },
          "VersioningConfiguration" : {
            "Status" : "Enabled"
          },
          "Tags" : [
            {"Key" : "Name", "Value" : "CICDWorkshop-S3Bucket" }
          ]
        }
      },
        "lambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "Path": "/",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "lambdaDemoPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": "*",
                      "Resource": "*"
                    }
                  ]
                }
              }
            ]
          }
        },
        "LambdaDemo": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Handler": "lam-function.lambda_handler",
            "Role": {
              "Fn::GetAtt": [
                "lambdaRole",
                "Arn"
              ]
            },
            "Code": {
              "S3Bucket": "trial-naijaboys",
              "S3Key": "lam-function.zip"
            },
            "Runtime": "python3.6",
            "Timeout": 25
          }
        }
    }, 
  
    "Outputs" : {
  
    }
  }
  
